"""
Django settings for proj_django_todo project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path
import environ

import firebase_admin
from firebase_admin import credentials

APP_NAME = 'Todo-App'
APP_URL = 'http://127.0.0.1:8000'

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Initialize environment variables
env = environ.Env()
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-e@ebr&ia)!t=z)2r!6y#v*buxk7o8t)ls($u6v^(5(+e@k5u(9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = []
ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app_todo.apps.AppTodoConfig',
    "crispy_forms",
    "crispy_bootstrap4",
    "background_task",
    "rest_framework",
]

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap4"

CRISPY_TEMPLATE_PACK = "bootstrap4"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',  # Enable locale middleware
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]

ROOT_URLCONF = 'proj_django_todo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['./templates',],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'app_todo.stores.processors.workspaces', # custom context processor 
            ],
        },
    },
]

WSGI_APPLICATION = 'proj_django_todo.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "collab_todo",
        "USER": "root",
        "PASSWORD": "",
        "HOST": "127.0.0.1",
        "PORT": "3306",
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LANGUAGES = [
    ('en', 'English'),
    ('am', 'አማርኛ'),
    # Add other languages here...
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en'  # Default language

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale'),
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# media files (uploaded files like images, docs, audios, and videos )

MEDIA_URL = 'media/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# AUTH_USER_MODEL = 'app_todo.User'

# record status constants 
ACTIVE = 1
INACTIVE = 2
ARCHIVED = 3

RECORD_STATUS_CHOICES = (
        (ACTIVE, 'Active'),
        (INACTIVE, 'Inactive'),
        (ARCHIVED, 'Archived'),
        )

# todo status constants 
PENDING = 0
IN_PROGRESS = 1
COMPLETED = 2
ON_PRIORITY = 3
NEEDS_INFO = 4
ON_HOLD = 5
CANCELLED = 6

# todo status choices 
TODO_STATUS_CHOICES = (
    (PENDING, 'Pending'),
    (IN_PROGRESS, 'In Progress'),
    (COMPLETED, 'Completed'),
    (ON_PRIORITY, 'On Priority'), 
    (NEEDS_INFO, 'Needs Info'),
    (ON_HOLD, 'On Hold'),
    (CANCELLED, 'Cancelled'), 
)

# todo attachments upload folder
PATH_FOR_USER_PROFILES = 'user-profiles/'
PATH_FOR_TODO_ATTACHMENTS = 'todo-attachments/'

# Email settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# if DEBUG:
#     EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_HOST = env('EMAIL_HOST', default='smtp.gmail.com')
EMAIL_PORT = env('EMAIL_PORT', default=587)
EMAIL_USE_TLS = False
EMAIL_USE_SSL = True
EMAIL_HOST_USER = env('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

LOGIN_URL = '/login/'
LOGOUT_REDIRECT_URL = '/login/'

FCM_SERVICE_ACCOUNT_FILE = os.path.join(BASE_DIR, 'app_todo', env('FCM_SERVICE_ACCOUNT_FILE'))

# Replace 'path/to/your/google-services.json' with the actual path 
cred = credentials.Certificate(FCM_SERVICE_ACCOUNT_FILE)
firebase_admin.initialize_app(cred)

FIREBASE_CONFIG = {
    'apiKey': env('FB_API_KEY', default=''),
    'authDomain': env('FB_AUTH_DOMAIN', default=''),
    'projectId': env('FB_PROJECT_ID', default=''),
    'storageBucket': env('FB_STORAGE_BUCKET', default=''),
    'messagingSenderId': env('FB_MESSAGING_SENDER_ID', default=''),
    'appId': env('FB_APP_ID', default=''),
    'measurementId': env('FB_MEASUREMENT_ID', default=''),
}
